@model FitQuest.Models.DietPlanViewModel

@{
    ViewData["Title"] = "Nutrition Plan";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Generate Nutrition Plan</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
        }
        .container {
            width: 80%;
            margin: auto;
        }
        header {
            background-color: #333;
            color: white;
            padding: 10px 0;
            text-align: center;
        }
        .button {
            display: inline-block;
            padding: 10px 20px;
            background-color: #333;
            color: white;
            text-align: center;
            border-radius: 5px;
        }
        .button:hover {
            background-color: #77aaff;
        }
        #dietPlanResult {
            margin-top: 20px;
            padding: 10px;
            background-color: white;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        .error-message {
            color: red;
            font-weight: bold;
            margin-top: 20px;
            padding: 10px;
            background-color: #ffe6e6;
            border: 1px solid red;
            border-radius: 5px;
        }
        .error-message .button {
            background-color: #f44336;
        }
    </style>
</head>
<body>

    <header>
        <h1>Diet Plan Generator</h1>
    </header>

    <div class="container">
        <!-- Check if the user is logged in -->
        @if (string.IsNullOrEmpty(Context.Session.GetString("Username")))
        {
            <!-- Show an error message if the user is not logged in -->
            <div class="error-message">
                You are not logged in. Please log in to generate a nutrition plan.
                <br />
                <!-- Redirect button to login page -->
                <a href="/Home/Login" class="button">Go to Login</a>
            </div>
        }
        else
        {
            <!-- If logged in, allow generating the nutrition plan -->
            <h2>Click below to generate your personalized diet plan</h2>

            <!-- Button to trigger nutrition plan generation -->
            <form method="post" action="/Home/GenerateNutritionPlan">
                <button type="submit" class="button">Generate Nutrition Plan</button>
            </form>

            <!-- Show error message if there is any -->
            @if (ViewBag.ErrorMessage != null)
            {
                <div class="error-message">
                    @ViewBag.ErrorMessage
                    <!-- Button to redirect to profile page if there is an error -->
                    <br />
                    <a href="/Home/Profile" class="button">Go to Profile</a>
                </div>
            }

            <!-- Display the generated nutrition plan if available -->
            @if (Model != null && !string.IsNullOrEmpty(Model.DietPlan))
            {
                <div id="dietPlanResult">
                    <h3>Your Nutrition Plan</h3>
                    @Html.Raw(Model.DietPlan)
                </div>
            }

            <!-- If no diet plan generated, prompt user to update profile -->
            @if (Model == null || string.IsNullOrEmpty(Model.DietPlan))
            {
                <p>Please update your profile information to generate a nutrition plan.</p>
            }
        }
    </div>

</body>
</html>
